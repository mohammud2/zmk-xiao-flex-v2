/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB          &kp Q  &kp W  &kp E  &kp R           &kp T               &kp Y              &kp U      &kp I      &kp O    &kp P     &kp DELETE
&lt 1 BACKSPACE  &kp A  &kp S  &kp D  &kp F           &kp G               &kp H              &kp J      &kp K      &kp L    &kp SEMI  &lt 2 SINGLE_QUOTE
&mkp RCLK        &kp Z  &kp X  &kp C  &kp V           &kp B               &kp N              &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ESCAPE
                               &mo 4  &kp LEFT_SHIFT  &kp LEFT_COMMAND    &kp RET            &kp SPACE  &mo 4
                                      &mkp LCLK       &mo 3               &kp LS(LG(SPACE))  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans          &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EXCL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp DOUBLE_QUOTES
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp DOLLAR            &kp AMPERSAND          &trans          &trans           &trans
                        &trans  &trans  &trans    &trans    &trans                &trans
                                &trans  &trans    &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans             &trans  &trans          &kp K_VOLUME_UP    &trans      &trans        &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans
&kp LA(BACKSPACE)  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_NEXT  &kp K_MUTE    &bt BT_CLR      &trans  &trans  &trans  &trans  &trans
&trans             &trans  &trans          &kp K_VOLUME_DOWN  &trans      &trans        &trans          &trans  &trans  &trans  &trans  &trans
                                           &trans             &trans      &trans        &trans          &trans  &trans
                                                              &trans      &trans        &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans             &trans        &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR       &kp AT             &kp N7        &kp N8         &kp N9        &kp COLON   &kp PLUS
&kp LA(BACKSPACE)  &kp ASTERISK  &kp PERCENT    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp HASH           &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp PERIOD  &kp EXCL
&trans             &trans        &trans         &trans                &kp UNDERSCORE         &kp TILDE        &kp MINUS          &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp SLASH   &kp EQUAL
                                                &trans                &trans                 &trans           &kp LA(MINUS)      &kp N0        &kp LA(SPACE)
                                                                      &trans                 &trans           &kp LA(LS(MINUS))  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp LS(LA(LC(LG(J))))  &kp LS(LA(LC(LG(I))))  &kp RC(RS(DOWN))      &kp RC(RS(LEFT_ARROW))  &kp LC(LS(LA(LEFT_ARROW)))  &kp LS(LA(LC(LG(E))))           &kp LS(LA(LC(LG(A))))  &mkp LCLK      &kp UP_ARROW   &mkp RCLK          &kp LC(UP_ARROW)       &kp LS(LG(NUMBER_4))
&kp LS(LA(LC(LG(L))))  &kp LALT               &kp LEFT_SHIFT        &kp RC(RS(UP_ARROW))    &kp LC(LS(LA(UP_ARROW)))    &kp LC(LS(LA(LG(G))))           &kp LS(LA(LC(LG(B))))  &kp LEFT       &kp DOWN       &kp RIGHT          &kp END                &kp LS(LC(LA(LG(D))))
&kp LS(LA(LC(LG(M))))  &kp LS(LA(LC(LG(N))))  &kp LC(LS(LA(DOWN)))  &kp RC(RS(RIGHT))       &kp LC(LS(LA(RIGHT)))       &kp LC(LS(LA(LG(UP_ARROW))))    &kp LA(LG(A))          &kp LS(LG(F))  &kp LS(LG(K))  &kp LC(LS(LA(K)))  &kp LC(LS(LA(LG(H))))  &kp LS(LA(LC(LG(C))))
                                                                    &trans                  &trans                      &trans                          &trans                 &trans         &trans
                                                                                            &trans                      &trans                          &trans                 &trans
            >;
        };

        layer_1 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mkp LCLK  &mkp RCLK  &kp N7     &kp N8  &kp N9  &kp BSPC
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &trans     &kp FSLH   &kp N4     &kp N5  &kp N6  &kp MINUS
&kp F7      &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &trans     &kp TAB    &kp N1     &kp N2  &kp N3  &kp PLUS
                                        &bootloader   &trans        &trans          &kp N0     &kp DOT    &kp ENTER
                                                      &trans        &trans          &trans     &trans
            >;
        };
    };
};
